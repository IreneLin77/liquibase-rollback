name: Liquibase Rollback

on:
  workflow_dispatch:
    inputs:
      rollback_tag:
        description: "Tag to rollback to (e.g., v1.0, v2.0, v3.0)"
        required: true
        type: string
      environment:
        description: "Select environment (local, dev, stage, default)"
        required: true
        type: choice
        options:
          - local
          - dev
          - stage
          - default

jobs:
  rollback:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install yq for YAML parsing
        run: |
          apt-get update
          apt-get install -y jq curl
          curl -L https://github.com/mikefarah/yq/releases/download/v4.25.1/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Read database connection details from YAML
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "local" ]]; then
            YAML_FILE="src/main/resources/application-default.yaml"
          elif [[ "${{ github.event.inputs.environment }}" == "dev" ]]; then
            YAML_FILE="src/main/resources/application-dev.yaml"
          elif [[ "${{ github.event.inputs.environment }}" == "stage" ]]; then
            YAML_FILE="src/main/resources/application-stage.yaml"
          else
            YAML_FILE="src/main/resources/application-default.yaml"
          fi

          DB_URL=$(yq e '.spring.liquibase.url' $YAML_FILE)
          DB_USER=$(yq e '.spring.liquibase.user' $YAML_FILE)
          DB_PASSWORD=$(yq e '.spring.liquibase.password' $YAML_FILE)

          if [[ "$DB_USER" == "\${spring.r2dbc.username}" ]]; then
            DB_USER=$(yq e '.spring.r2dbc.username' $YAML_FILE)
          fi
          if [[ "$DB_PASSWORD" == "\${spring.r2dbc.password}" ]]; then
            DB_PASSWORD=$(yq e '.spring.r2dbc.password' $YAML_FILE)
          fi
          
          echo "DB_URL=$DB_URL" >> $GITHUB_ENV
          echo "DB_USER=$DB_USER" >> $GITHUB_ENV
          echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'maven'
          
      - name: Check rollback tag
        run: |
          echo "Rollback tag is: ${{ github.event.inputs.rollback_tag }}"

      - name: Check if Maven is installed
        run: |
          echo "Checking Maven installation..."
          which mvn || echo "Maven is NOT installed"
          mvn -version || echo "Maven command failed"

      - name: Install wget
        run: |
          apt-get update
          apt-get install -y wget

      - name: Install Maven (if not found)
        run: |
          if ! command -v mvn &> /dev/null
          then
            echo "Installing Maven..."
            MAVEN_VERSION=3.9.6
            wget https://downloads.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz
            tar -xvzf apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /opt
            ln -s /opt/apache-maven-${MAVEN_VERSION}/bin/mvn /usr/bin/mvn
          fi

      - name: Ensure JAVA_HOME is set
        run: |
          export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
          echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV

      - name: Liquibase Rollback
        run: |
          mvn liquibase:rollback \
              -Dliquibase.rollbackTag=${{ github.event.inputs.rollback_tag }} \
              -Dliquibase.url=${{ env.DB_URL }} \
              -Dliquibase.username=${{ env.DB_USER }} \
              -Dliquibase.password=${{ env.DB_PASSWORD }}
