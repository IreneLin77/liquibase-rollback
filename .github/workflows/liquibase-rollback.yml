name: Liquibase Rollback

on:
  workflow_dispatch:
    inputs:
      rollback_tag:
        description: "Tag to rollback to (e.g., v1.0, v2.0, v3.0)"
        required: true
        type: string
      environment:
        description: "Select environment (local, dev, stage, default)"
        required: true
        type: choice
        options:
          - local
          - dev
          - stage
          - default

jobs:
  rollback:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y maven jq curl
          curl -L https://github.com/mikefarah/yq/releases/download/v4.25.1/yq_linux_amd64 -o yq
          chmod +x yq
          mv yq /usr/local/bin/
          mvn -version
  
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Set database parameters
        run: |
          # First check if DB_URL is available from act runner
          if [ -n "$DB_URL" ] && [ -n "$DB_USER" ] && [ -n "$DB_PASSWORD" ]; then
            echo "Using database parameters from environment variables"
          else
            # Fall back to YAML parsing
            if [[ "${{ github.event.inputs.environment }}" == "local" ]]; then
              YAML_FILE="src/main/resources/application-default.yaml"
            elif [[ "${{ github.event.inputs.environment }}" == "dev" ]]; then
              YAML_FILE="src/main/resources/application-dev.yaml"
            elif [[ "${{ github.event.inputs.environment }}" == "stage" ]]; then
              YAML_FILE="src/main/resources/application-stage.yaml"
            else
              YAML_FILE="src/main/resources/application-default.yaml"
            fi

            DB_URL=$(yq e '.spring.liquibase.url' $YAML_FILE)
            DB_USER=$(yq e '.spring.liquibase.user' $YAML_FILE)
            DB_PASSWORD=$(yq e '.spring.liquibase.password' $YAML_FILE)

            if [[ "$DB_USER" == "\${spring.r2dbc.username}" ]]; then
              DB_USER=$(yq e '.spring.r2dbc.username' $YAML_FILE)
            fi
            if [[ "$DB_PASSWORD" == "\${spring.r2dbc.password}" ]]; then
              DB_PASSWORD=$(yq e '.spring.r2dbc.password' $YAML_FILE)
            fi
            
            echo "DB_URL=$DB_URL" >> $GITHUB_ENV
            echo "DB_USER=$DB_USER" >> $GITHUB_ENV
            echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
          fi

      - name: Ensure changelog files exist
        run: |
          mkdir -p ./db/changelog

          cp src/main/resources/db/changelog/changelog-master.yaml ./changelog-master.yaml
          cp src/main/resources/db/changelog/changelog-0.yaml ./db/changelog/

      - name: Execute Liquibase rollback
        run: |
          if [ "${{ github.event.inputs.environment }}" = "stage" ] && [ -n "${{ secrets.STAGE_DB_URL }}" ]; then
            echo "Using credentials from secrets"
            DB_URL="${{ secrets.STAGE_DB_URL }}"
            DB_USER="${{ secrets.STAGE_DB_USERNAME }}"
            DB_PASSWORD="${{ secrets.STAGE_DB_PASSWORD }}"
          fi
          
          echo "Executing rollback to tag: ${{ github.event.inputs.rollback_tag }}"
          
          mvn liquibase:rollback \
            -Dliquibase.url=$DB_URL \
            -Dliquibase.username=$DB_USER \
            -Dliquibase.password=$DB_PASSWORD \
            -Dliquibase.rollbackTag=${{ github.event.inputs.rollback_tag }} \
            -Dliquibase.changeLogFile=./changelog-master.yaml \
            -Dliquibase.searchPath=.